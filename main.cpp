#include <iostream>
#include <random>
#include <algorithm>
#include <vector>
#include "avl.hpp"
#include "bTree.hpp"

int b[8] = {6, 1, 7, 8, 2, 3, 5, 4};
int c[8] = {2, 5, 6, 8, 7, 1, 3, 4};
int d[8] = {1, 2, 3, 4, 5, 6, 7, 8};

int ra[8] = {-1565019504, -390660289, 2122435038, -408257286, 631183611, -1886366707, -154682768, 460849280};
//{1657937496, 96432015, 1063406789, -621491145, -734346173, -1576072066, -1275643092, -1696102093};
//{-1095204490, -1688103928, 534167082, 889467644, 753989168, -1010070477, 1526478837, 1615893535}
//{758402484, 2033947360, 50330539, 448663599, 1552157794, -722372874, 1608393351, 779220703};
//{1791057005, -1783264727, 307020770, -2025795444, 399876863, 365673978, 1431702175, 930727640}
//{1062973774, -1866491801, -1593248661, 433124996, 2067236064, -1799480811, -71509729, 520814438};

int ord[] = {7, 2, 4, 1, 5, 6, 3, 0};

//int main() {
//    AVL<int> a;
//    std::random_device rand;
//    for (int i=0 ; i<8 ; i++) {
//        ra[i] = rand();
//        a.insert(ra[i]);
//        std::cout << ra[i] << ',' << ' ';
//    }
//
//    std::cout.put('\n');
//
//    std::vector<int> output_order({7, 2, 4, 1, 5, 6, 3, 0});
//    int change_times = rand() % 10000000;
//    for (int i=0 ; i<change_times ; i++) std::next_permutation(output_order.begin(), output_order.end());
//
//    for (auto & i : output_order) std::cout << i << ',' << ' ';
//
//    std::cout.put('\n');
//
//    for (int i=0 ; i<=7 ; i++)
//        std::cout << output_order[i] << ':' << a.remove(ra[output_order[i]]) << ' ';
//
//    return 0;
//}


int rb[70] = {86233727, 1350926950, 1145736510, 1255361816, 11271563, -867271700, 1890029250, 804495240, 711797235, -789007537, 921574296, 1144082293, -1486088598, -953261553, -1965989759, -444491974, -517890870, 640879073, -1534147044, 572954615, -817785957, 862598034, 2051836839, 338415005, -2080004548, -2099750019, 105921554, -732007055, 1545028147, 696327591, 1030410178, -1816757027, 1471732680, -765619535, 470366961, -557769413, -1486779100, -1071075485, 663990290, -747145467, 823770628, -43048559, 618107652, -2136824122, -1597815013, 1688871606, 1221564885, -1089563358, 2050577286, -61348482, -2053677279, 1426285477, 994564179, 693163205, 315114538, 427643344, -88512159, -1291051286, -1325262219, -468224104, 909551941, -33765606, 1127573104, 322080952, -1728245052, 1312611102, 289063816, 993973032, -2010320329, -405983649};

int main() {
    bTree<int, 4> bt;
    std::random_device rand;
    for (int i=0 ; i<70 ; i++) {
//        rb[i] = rand();
        bt.insert(rb[i]);
//        std::cout << rb[i] << ',' << ' ';

        std::cout << i << '\t';
        for (int j=0 ; j<=i ; j++) {
            std::cout << bt.find(rb[j]) << ' ';
        }
        std::cout << '\n';
    }

    std::cout.put('\n');



    return 0;
}
